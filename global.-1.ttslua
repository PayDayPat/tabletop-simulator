debug = nil

button_parameters = {}
button_parameters.click_function = "testButton"
button_parameters.function_owner = nil
button_parameters.label = "BUTTON"
button_parameters.position = {0, 0.2, 0}
button_parameters.rotation = {0, 0, 0}
button_parameters.width = 500
button_parameters.height = 500
button_parameters.font_size = 100



function getRule(value)
    value = tonumber(value)
    ruleList = {
        'Get out of jail.',
        'Hand out one drink to any player you choose.',
        'You must take one drink.',
        'Women must drink one.',
        'Play the drive mini-game.',
        'Men must drink one.',
        'Play the never have I ever mini-game.',
        'Date one player of your choice.',
        'Play the rhyme mini-game.',
        'Create one rule.',
        'You are now in jail.',
        'You are now question master.',
        'Play the categories mini-game.'
    }

    return ruleList[value]
end

function giveDrinks(bag, numberOfDrinks, player)
    bag.deal(numberOfDrinks, player)
end

function onLoad()
    math.randomseed(98837098)

    redPlayerBoard = getObjectFromGUID('d05a86')
    redPlayerBoardZone = getObjectFromGUID('d08a1f')

    checker = getObjectFromGUID('2a700f')
    checker.setScale(vector(1,1,1))
    checker.createButton(button_parameters)
end

function onUpdate()
end

function onObjectEnterScriptingZone(zone,obj)
    zoneObjects = getObjectFromGUID('467cb7').getObjects()

    printToAll(getRule(obj.getName()), {r=1, g=0, b=0})


    count = 1
    for k,v in pairs(zoneObjects) do
       count = count+1
    end

    drink = math.random()
    drinkPercentage = count * 5 / 100
    total = drink + drinkPercentage

    if debug then
        printToAll(obj.getName())
        printToAll(obj.getDescription())
    end

    if total > 1 then
        printToAll('DRINK MOFOS', {r=1, g=0, b=0})
    end
end

function testButton()
    bag = getObjectFromGUID('bcbd72')
    redPlayerBoard = getObjectFromGUID('d05a86')
    redPlayerBoardZone = getObjectFromGUID('a7470b').getObjects()

    count = 0
    column = 0
    row = 0
    for k,v in pairs(redPlayerBoardZone) do
       count = count + 1
    end

    row = math.floor(count / 7) + 1
    column = count % 7 + 1

    drinkTokenOffset = vector(column, 0, -row)
    target = redPlayerBoard.getBounds().center
    target = target - redPlayerBoard.getBounds().size:scale(vector(0.5,-1.2,-0.5)) + drinkTokenOffset

    bag.takeObject({position = target, rotation={0,180,0}})
end
